@model PaginatedList<OrderListDto>

@{
    ViewData["Title"] = "List";
}

<div class="container mt-3">
    <h2>Product List</h2>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Person Order</th>
                <th>Product</th>
                <th>Product Image</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>InStock</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.FirstName @item.LastName</td>
                    <td>@item.Title</td>
                    <td><img src="~/img/product-list-img/@item.ImagePath" style="width:100px; height:100px" class="border border-white rounded-3" /></td>
                    <td>@item.Qty</td>
                    <td>@item.UnitPrice</td>
                    <td>@item.InStock</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>


